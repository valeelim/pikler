Greedy algorithm     a greedy algorithm is an algorithm that uses many iterations to compute the result . such algorithms assume that this result will be obtained by selecting the best result at the current iteration . in other words : the global optimum is obtained by selecting the local optimum at the current time . examples of such algorithms : - kruskal 's algorithm for finding the minimum spanning tree in a graph . - prim 's algorithm for finding the minimum spanning tree in a graph . - dijkstra 's algorithm for finding the shortest path in a graph with non-negative edge lengths . there are some problems where greedy algorithms do not produce the best possible solution . in such cases , they often produce the worst possible one . again look at the coin-changing example above , and imagine that there are coins for 25 cent , 10 cent and 4 cent . now imagine that the sum of 41 cent needs to be changed . a greedy algorithm would pick 25 cent , 10 cent , and 4 cent , for a total of 39 cent . the algorithm is then stuck , because the remaining 2 cent can not be changed . one possible way of solving the is to use the 25 cent coin , and four coins of 4 cent .