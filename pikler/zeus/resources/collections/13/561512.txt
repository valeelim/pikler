NP-hardness     an np-hard problem is a yes/no problem where finding a solution for it is at least as hard finding a solution for the hardest problem whose solution can quickly be checked as being true . some np-hard problems are ones where a working solution can be checked quickly ( np problems ) and some are not . np-hard problems that are also np problems fit into a category called np-complete . an example of a problem that is at least as hard to solve as any other problem that we can quickly check solutions for , which is also quickly checkable ( it is both np-hard and np ) : a travelling salesman wants to visit 100 cities by driving , starting and ending his trip at home . he has a limited supply of gasoline , so he can only drive a total of 10,000 kilometers . he wants to know if he can visit all of the cities without running out of gasoline . people do n't know how to solve this problem faster than testing every possible answer , but if a solution is found that allows the salesman to do this , we can can use an algorithm check that it is true .