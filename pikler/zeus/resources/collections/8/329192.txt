Exception handling     in computing , an exception is a special situation where the program can not do things the way it usually would and is forced to do something else instead . one layer of the system uses an exception to give another layer information about special states the system is currently in . the different layers of software or hardware have contracts , that tell what can be expected ; this is generally known as programming by contract . in the context of exception handling , a program is said to be exception-safe , if exceptions that occur will not produce side-effects ( such as memory leaks ) , will not change stored data so that it becomes unreadable , or generate output that is invalid . there are different levels of exception safety : 1. failure transparency or no throw guarantee : no matter what happens , no exceptions will be thrown . this is the best level of exception safety , but also the most difficult to implement . 1. commit or rollback semantics , strong exception safety , no change guarantee : operations can fail , and exceptions will be thrown . however , a failed operation is guaranteed to not have side-effects or change the data .