Cache algorithm     a cache algorithm is an algorithm used to manage a cache or group of data . when the cache is full , it decides which item should be deleted from the cache . the word `` hit rate '' describes how often a request can be served from the cache . the term latency describes for how long a cached item can be obtained . cache alorithms are a trade-off between hit-rate and latency . - the `` most '' efficient caching algorithm would be to always discard the information that will not be needed for the longest time in the future . this optimal result is referred to as belady 's optimal algorithm or the clairvoyant algorithm . since it is generally impossible to predict how far in the future information will be needed , this is generally not implementable in practice . the practical minimum can be calculated only after experimentation , and one can compare the effectiveness of the actually chosen cache algorithm with the optimal minimum . - least recently used ( lru ) : deletes the least recently used items first . this algorithm requires keeping track of what was used when . this is expensive if one wants to make sure the algorithm always discards `` the '' least recently used item . general implementations of this technique require to keep `` age bits '' for cache-lines and track the `` least recently used '' cache-line based on age-bits . in such implementation , every time a cache-line is used , the age of all other cache-lines changes . lru is actually a family of caching algorithms with members including : 2q by theodore johnson and dennis shasha and lru/k by pat o'neil , betty o'neil and gerhard weikum .