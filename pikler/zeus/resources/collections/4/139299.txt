Instruction pipelining     instruction pipelining is a technique used in the design of modern microprocessors , microcontrollers and cpus to increase their instruction throughput ( the number of instructions that can be executed in a unit of time ) . the main idea is to divide ( termed `` split '' ) the processing of a cpu instruction , as defined by the instruction microcode , into a series of independent steps of micro-operations ( also called `` microinstructions '' , `` micro-op '' or `` Âµop '' ) , with storage at the end of each step . this allows the cpus control logic to handle instructions at the processing rate of the slowest step , which is much faster than the time needed to process the instruction as a single step . the term pipeline refers to the fact that each step is carrying a single microinstruction ( like a drop of water ) , and each step is linked to another step ( analogy ; similar to water pipes ) . most modern cpus are driven by a clock . the cpu consists internally of logic and memory ( flip flops ) . when the clock signal arrives , the flip flops store their new value then the logic requires a period of time to decode the flip flops new values . then the next clock pulse arrives and the flip flops store another values , and so on . by breaking the logic into smaller pieces and inserting flip flops between pieces of logic , the time required by the logic ( to decode values till generating valid outputs depending on these values ) is reduced . in this way the clock period can be reduced. < br > for example , the risc pipeline is broken into five stages with a set of flip flops between each stage as follow :