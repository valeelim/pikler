Instruction level parallelism     instruction-level parallelism ( ilp ) is a measure of how many operations in a computer program can be performed `` in-parallel '' at the same time ( termed : '' simultaneously '' ) . consider the following program : operation 3 depends on the results of `` e '' and `` f '' which are calculated from operations 1 and 2 , so `` g '' can not be calculated until both of `` e '' and `` f '' are computed . however , operations 1 and 2 do not depend on any other operation , so they can be computed simultaneously . if we assume that each operation can be completed in one unit of time then these three instructions can be completed in a total of two units of time , giving an ilp factor of 3/2 ; which means 3/2 = 1.5 greater than without ilp . one of the goals of compilers and processors designers is to use as much ilp as possible . ordinary programs are written execute instructions in sequence ; one after the other , in the order as written by programmers . ilp allows the compiler and the processor to overlap the execution of multiple instructions or even to change the order in which instructions are executed .