Computational complexity theory     computational complexity theory is a part of computer science . it looks at algorithms , and tries to say how many steps or how much memory a certain algorithm takes for a computer to do . very often , algorithms that use fewer steps use more memory ( or the other way round : if there is less memory available , it takes more steps to do ) . many interesting algorithms take a number of steps that is dependent on the size of the problem . complexity theory also looks at how a problem changes if it is done for more elements . a problem of constant complexity class is the only class in which this is not true . a problem with constant complexity takes the same number of steps to complete no matter the size of the input or the number of elements it is computed on . broadcasting a message can be thought of as a problem of constant complexity . no matter how many people need to receive a message , all can listen on to one single broadcast with no extra broadcasts needed . mowing the lawn can be thought of as a problem with linear complexity . mowing an area that is double the size of the original takes twice as long .