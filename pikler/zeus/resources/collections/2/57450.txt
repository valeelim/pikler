Inheritance (computer science)    inheritance ( computer science ) in object-oriented programming languages , inheritance is a way to add functionality . object-oriented programming has the notion of classes ( and perhaps interfaces ) . a `` derived class '' inherits most fields and methods from its parent class . it can modify the behaviour of the parent , by adding new fields and methods , or by modifying existing ones . depending on the programming language used , there may be certain restrictions when extending a class . inheritance can be used to solve different types of problems : - `` specialisation '' : the child class extends the functionality of the parent . that way a `` bank account '' may have fields for `` balance '' , `` account number '' and `` owner '' ; a subclass `` interest-earning account '' may add fields like `` interest rate '' and `` interest received '' . - `` overriding '' : the child class can redefine the behaviour of the parent class . - `` code reuse '' : code that is common to many classes can be placed in a parent class , and reused . an example can be a car class . you could create a ferrari class which would inherit from car , and also make a toyota class which would also inherit from car . this way , all the fields and methods ( drive method , brake method , color field ... ) would also be inside of ferrari and toyota , and you would n't need to copy the code twice . however , maybe inside of car you could have a brand field . this brand field would be equal to nothing , but inside of ferrari the field might be equal to `` ferrari '' and in toyota to `` toyota '' . of course , you could not just create a car , because otherwise that field would be missing . in order to prevent people from just creating a car , you turn the car into an abstract class .