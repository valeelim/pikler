NP-complete     an np problem is an algorithmic problem such that if you have a case of the problem of size formula_1 , the number of steps needed to check the answer is smaller than the value of some polynomial in formula_1 . it does n't mean one can find an answer in the polynomial number of steps , only check it . an np-complete problem is an np problem such that if one could find answers to that problem in polynomial number of steps , one could also find answers to all np problems in polynomial number of steps . this makes np-complete decision problems the hardest problems in np ( they are np-hard ) . people spent lots of time looking for algorithm that finds answers to some np-complete problem in polynomial number of steps , but have n't found any . because of this , if someone shows a problem to be np-complete , it is not likely that there is an algorithm solving it in polynomial number of steps . the unsolved problem p = np asks whether polynomial time algorithms actually exist for np-complete , and by corollary , all np problems . it is widely believed that this is not the case .